project_name: xtest
gomod:
  # Proxy a module from proxy.golang.org, making the builds verifiable.
  # This will only be effective if running against a tag. Snapshots will ignore this setting.
  # Notice: for this to work your `build.main` must be a package, not a `.go` file.
  #
  # Default is false.
  proxy: false

  # If proxy is true, use these environment variables when running `go mod` commands (namely, `go mod tidy`).
  # Defaults to `os.Environ()`.
  env:
    - GO111MODULE=on
    - GOPROXY=https://goproxy.cn

before:
  hooks:
    # You may remove this if you don't use go modules.
    -  go mod tidy
builds:
  - env:
      - CGO_ENABLED=1
      - CC=x86_64-linux-gnu-gcc
      - CC_FOR_TARGET=gcc-x86_64-linux-gnu
      - PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig/

    main: .
    id: xtest
    hooks:
      pre:
        - sudo apt-get update
        - sudo apt-get install -y libnuma-dev
        - sudo apt-get install -y net-tools
        - mkdir -p {{ dir .Path }}/lib
        - sudo cp ./lib/libh264bitstream.so.0 /usr/local/lib/
        - sudo cp ./lib/libh264bitstream.so.0 /usr/local/lib/libh264bitstream.so
      post:
        - sudo cp -ar ./script/xtest.toml {{ dir .Path }}/
        - sudo cp -ar ./script/test.sh  {{ dir .Path }}/
        - sudo cp -ar ./lib/  {{ dir .Path }}/
    binary: xtest
    goos:
      - linux
    goarch:
      - amd64
    tags:
      - netgo
      - static
      - osusergo
    ldflags:
      - -s -w
      - -linkmode external
checksum:
  disable: true
  name_template: '{{ .ProjectName }}_checksums.txt'
snapshot:
  name_template: "{{ .Tag }}-next"
changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'
archives:
  -
    files:
      - src: './lib/*'
        dst: 'lib'
        strip_parent: true

      - src: './script/*'
        dst: 'script'
        strip_parent: true
